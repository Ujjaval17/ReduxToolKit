{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuth: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    isLogin(state) {\n      state.isAuth = true;\n    },\n\n    isLogOut(state) {\n      state.isAuth = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuth","authSlice","isLogin","isLogOut","store","reducer","auth","counterActions","actions","authActions"],"sources":["E:/ReduxNew/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialCounterState = {counter : 0, showCounter: true}\r\n\r\nconst counterSlice = createSlice({\r\n    name : 'counter',\r\n    initialState : initialCounterState,\r\n    reducers : {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\nconst initialAuthState = {isAuth : false}\r\nconst authSlice = createSlice({\r\n    name : 'auth',\r\n    initialState : initialAuthState,\r\n    reducers : {\r\n        isLogin(state) {\r\n            state.isAuth = true;\r\n        },\r\n        isLogOut(state) {\r\n            state.isAuth = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer : { \r\n        counter : counterSlice.reducer,\r\n        auth : authSlice.reducer }\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAGA,MAAMC,mBAAmB,GAAG;EAACC,OAAO,EAAG,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAG,SADsB;EAE7BC,YAAY,EAAGL,mBAFc;EAG7BM,QAAQ,EAAG;IACPC,SAAS,CAACC,KAAD,EAAQ;MACbA,KAAK,CAACP,OAAN;IACH,CAHM;;IAIPQ,SAAS,CAACD,KAAD,EAAQ;MACbA,KAAK,CAACP,OAAN;IACH,CANM;;IAOPS,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACpBH,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;IACH,CATM;;IAUPC,aAAa,CAACL,KAAD,EAAQ;MACjBA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;IACH;;EAZM;AAHkB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;EAACC,MAAM,EAAG;AAAV,CAAzB;AACA,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC1BM,IAAI,EAAG,MADmB;EAE1BC,YAAY,EAAGS,gBAFW;EAG1BR,QAAQ,EAAG;IACPW,OAAO,CAACT,KAAD,EAAQ;MACXA,KAAK,CAACO,MAAN,GAAe,IAAf;IACH,CAHM;;IAIPG,QAAQ,CAACV,KAAD,EAAQ;MACZA,KAAK,CAACO,MAAN,GAAe,KAAf;IACH;;EANM;AAHe,CAAD,CAA7B;AAaA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAG;IACNnB,OAAO,EAAGE,YAAY,CAACiB,OADjB;IAENC,IAAI,EAAGL,SAAS,CAACI;EAFX;AADe,CAAD,CAA5B;AAMA,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAA9B;AAEP,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}